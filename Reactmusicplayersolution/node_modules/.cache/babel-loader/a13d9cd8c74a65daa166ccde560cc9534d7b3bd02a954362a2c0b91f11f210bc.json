{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azay Yadhuvanshi\\\\Downloads\\\\Git Hub Project\\\\Reactmusicplayersolution\\\\Reactmusicplayersolution\\\\src\\\\components\\\\LibrarySong.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  songs,\n  setSongs\n}) => {\n  // Function\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n    const curSong = song;\n    const songList = songs;\n    const newSongs = songList.map(song => {\n      if (song.id === curSong.id) {\n        return {\n          ...song,\n          active: true\n        };\n      } else {\n        return {\n          ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    // check if user is wanting to play a song.\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LibrarySongContainer, {\n    onClick: songSelectHandler,\n    isActive: song.active,\n    className: \"library-song-container\",\n    children: [/*#__PURE__*/_jsxDEV(Img, {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(LibrarySongDescription, {\n      children: [/*#__PURE__*/_jsxDEV(H1, {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(H2, {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n// #BCFD4C\n_c = LibrarySong;\nconst LibrarySongContainer = styled.div`\n\tpadding: 0 2rem 0 2rem;\n\theight: 100px;\n\twidth: 100%;\n\tdisplay: flex;\n\ttransition: all 0.3s ease;\n\tbackground-color: ${p => p.isActive ? \"pink\" : \"white\"};\n\t&:hover {\n\t\tbackground-color: lightblue;\n\t\ttransition: all 0.3s ease;\n\t}\n\t&.active {\n\t\tbackground-color: pink;\n\t}\n`;\n_c2 = LibrarySongContainer;\nconst LibrarySongDescription = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n`;\n_c3 = LibrarySongDescription;\nconst Img = styled.img`\n\tmargin: 20px 0;\n\theight: 60px;\n`;\n_c4 = Img;\nconst H1 = styled.h3`\n\tpadding-left: 1rem;\n\tfont-size: 1rem;\n`;\n_c5 = H1;\nconst H2 = styled.h4`\n\tpadding-left: 1rem;\n\tfont-size: 0.7rem;\n`;\n_c6 = H2;\nexport default LibrarySong;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"LibrarySong\");\n$RefreshReg$(_c2, \"LibrarySongContainer\");\n$RefreshReg$(_c3, \"LibrarySongDescription\");\n$RefreshReg$(_c4, \"Img\");\n$RefreshReg$(_c5, \"H1\");\n$RefreshReg$(_c6, \"H2\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","LibrarySong","song","setCurrentSong","audioRef","isPlaying","songs","setSongs","songSelectHandler","curSong","songList","newSongs","map","id","active","current","play","LibrarySongContainer","onClick","isActive","className","children","Img","src","cover","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","LibrarySongDescription","H1","H2","artist","_c","div","p","_c2","_c3","img","_c4","h3","_c5","h4","_c6","$RefreshReg$"],"sources":["C:/Users/Azay Yadhuvanshi/Downloads/Git Hub Project/Reactmusicplayersolution/Reactmusicplayersolution/src/components/LibrarySong.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LibrarySong = ({ song, setCurrentSong, audioRef, isPlaying, songs, setSongs }) => {\n\t// Function\n\tconst songSelectHandler = async () => {\n\t\tawait setCurrentSong(song);\n\t\tconst curSong = song;\n\t\tconst songList = songs;\n\n\t\tconst newSongs = songList.map((song) => {\n\t\t\tif (song.id === curSong.id) {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: false,\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tsetSongs(newSongs);\n\n\t\t// check if user is wanting to play a song.\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.play();\n\t\t}\n\t};\n\n\treturn (\n\t\t<LibrarySongContainer onClick={songSelectHandler} isActive={song.active} className=\"library-song-container\">\n\t\t\t<Img src={song.cover} alt={song.name}></Img>\n\t\t\t<LibrarySongDescription>\n\t\t\t\t<H1>{song.name}</H1>\n\t\t\t\t<H2>{song.artist}</H2>\n\t\t\t</LibrarySongDescription>\n\t\t</LibrarySongContainer>\n\t);\n};\n// #BCFD4C\nconst LibrarySongContainer = styled.div`\n\tpadding: 0 2rem 0 2rem;\n\theight: 100px;\n\twidth: 100%;\n\tdisplay: flex;\n\ttransition: all 0.3s ease;\n\tbackground-color: ${(p) => (p.isActive ? \"pink\" : \"white\")};\n\t&:hover {\n\t\tbackground-color: lightblue;\n\t\ttransition: all 0.3s ease;\n\t}\n\t&.active {\n\t\tbackground-color: pink;\n\t}\n`;\n\nconst LibrarySongDescription = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n`;\n\nconst Img = styled.img`\n\tmargin: 20px 0;\n\theight: 60px;\n`;\n\nconst H1 = styled.h3`\n\tpadding-left: 1rem;\n\tfont-size: 1rem;\n`;\n\nconst H2 = styled.h4`\n\tpadding-left: 1rem;\n\tfont-size: 0.7rem;\n`;\n\nexport default LibrarySong;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}